//
//  CSRFAgentTests.swift
//  ForaBankTests
//
//  Created by Max Gribov on 23.01.2022.
//

import XCTest
@testable import ForaBank

class CSRFAgentTests: XCTestCase {
    
    let csrfAgent = CSRFAgent(keysProvider: ECKeysProvider())
    
    func testPemCertsFromStringData() throws {
        
        // given
        let certDataSample =
                """
                -----BEGIN CERTIFICATE-----\nMIIGNTCCBR2gAwIBAgISBKnOfqdiCLloeNKeDzAOov4lMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTAzMTUwNjQyMTJaFw0yMTA2MTMwNjQyMTJaMCExHzAdBgNVBAMT\nFnNydi1tYWlsLmJyaWdpbnZlc3QucnUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDk8MnLutFgkE6sObZZIyxBrq2T7F3aTykbysL59PkZRIpC3yJ+otq7\nzbAOAZ6081TpjFRc3zQu9AAEWssxDdgZKZxIYWxNe2Eg2uJtzctUmpH3eVyTLaYZ\nrEiFwVdTQeCcg+JPLAZ9nsdjAKsIccB44+s4GMAXxBJtQlsozUd/MaAvUfjrTsmR\nEK1bu2REraBvlMbSyNSeO8JlI0d1pHnmOkM70Pcvj5FUEIx17kJ3xfykHtVtZa/a\nZUXgSVLynTnuPVGpNjNVkfw+z89sbKAJd85e7U/kV86vwoOKaXnFrcYhM8r25tSg\nahmEI+v8A+7vNjjqgDNIKU8zbbMxzCrbAgMBAAGjggNUMIIDUDAOBgNVHQ8BAf8E\nBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFEFvpLzLkVQzxy4wemarIGSKhJCjMB8GA1UdIwQYMBaAFBQu\nsxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcwAYYV\naHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMuaS5s\nZW5jci5vcmcvMIIBIQYDVR0RBIIBGDCCARSCEmNoYXQuYnJpZ2ludmVzdC5ydYIN\nY2hhdC5pbm40Yi5ydYIRZ2l0LmJyaWdpbnZlc3QucnWCDGdpdC5pbm40Yi5ydYIM\naW5uNGIub25saW5lgghpbm40Yi5ydYISamlyYS5icmlnaW52ZXN0LnJ1ghFqaXJh\nLmlubjRiLm9ubGluZYINamlyYS5pbm40Yi5ydYIScm92MjEuaW5uNGIub25saW5l\ngg5yb3YyMS5pbm40Yi5ydYIWc3J2LW1haWwuYnJpZ2ludmVzdC5ydYIRc3J2LW1h\naWwuaW5uNGIucnWCEXRmcy5icmlnaW52ZXN0LnJ1ghB3d3cuaW5uNGIub25saW5l\nggx3d3cuaW5uNGIucnUwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMB\nAQEwKDAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEF\nBgorBgEEAdZ5AgQCBIH2BIHzAPEAdwD2XJQv0XcwIhRUGAgwlFaO400TGTO/3wwv\nIAvMTvFk4wAAAXg01dU/AAAEAwBIMEYCIQCXcU/71xjQtpKr5Xa/Nyndp/preAx7\nAyhoM4ZIdU2TygIhAKABQImwOLlJP3eyhEQxKSruDR/TuJEMGOkiDeZ4BP2FAHYA\nb1N2rDHwMRnYmQCkURX/dxUcEdkCwQApBo2yCJo32RMAAAF4NNXWBgAABAMARzBF\nAiEA6ZKg69wYtyS3dU9tTzANVJJLBo/ZVh1KJH43H/YgCSMCIBxIO22VilC8is38\nbGkx3YoBPUq8HZ9BnnOhsIrXGaW4MA0GCSqGSIb3DQEBCwUAA4IBAQBZYqAsANNa\nz4WVabxPG/KGG0T1CfOL4kdkM9Qgx9g3hw4J0qJPoQ60QVliKyUwHpcKmMF+AT20\nEsYl9Cu5DjA+PpjK0dMSYohuIs+nWVO7Flz876LDNDL2K15dHWYN0US9Bc+tsSZs\nD41e1deg8UYJQFnYtx7DQO1FDGaSu7iXGhuoTsLwBQrXs68aG7kJgfjJmfIiYzC5\nAll1leJQvG4IfqZPvEY3SZmhRuAaz17di0jLoEQnIC95HiEs05PZSsa9MTVBPVni\ntWQ7rrKUXKg0NcV9ZXp9t+Wn9XnBx+0I6tDOjtwuV/8Y9gR0q3s6lAa9oiLU5FZq\nncWUIW9udlDl\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEZTCCA02gAwIBAgIQQAF1BIMUpMghjISpDBbN3zANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTIwMTAwNzE5MjE0MFoXDTIxMDkyOTE5MjE0MFow\nMjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxCzAJBgNVBAMT\nAlIzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuwIVKMz2oJTTDxLs\njVWSw/iC8ZmmekKIp10mqrUrucVMsa+Oa/l1yKPXD0eUFFU1V4yeqKI5GfWCPEKp\nTm71O8Mu243AsFzzWTjn7c9p8FoLG77AlCQlh/o3cbMT5xys4Zvv2+Q7RVJFlqnB\nU840yFLuta7tj95gcOKlVKu2bQ6XpUA0ayvTvGbrZjR8+muLj1cpmfgwF126cm/7\ngcWt0oZYPRfH5wm78Sv3htzB2nFd1EbjzK0lwYi8YGd1ZrPxGPeiXOZT/zqItkel\n/xMY6pgJdz+dU/nPAeX1pnAXFK9jpP+Zs5Od3FOnBv5IhR2haa4ldbsTzFID9e1R\noYvbFQIDAQABo4IBaDCCAWQwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8E\nBAMCAYYwSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5p\nZGVudHJ1c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTE\np7Gkeyxx+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEE\nAYLfEwEBATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2Vu\nY3J5cHQub3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0\nLmNvbS9EU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYf\nr52LFMLGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjANBgkqhkiG9w0B\nAQsFAAOCAQEA2UzgyfWEiDcx27sT4rP8i2tiEmxYt0l+PAK3qB8oYevO4C5z70kH\nejWEHx2taPDY/laBL21/WKZuNTYQHHPD5b1tXgHXbnL7KqC401dk5VvCadTQsvd8\nS8MXjohyc9z9/G2948kLjmE6Flh9dDYrVYA9x2O+hEPGOaEOa1eePynBgPayvUfL\nqjBstzLhWVQLGAkXXmNs+5ZnPBxzDJOLxhF2JIbeQAcH5H0tZrUlo5ZYyOqA7s9p\nO5b85o3AM/OJ+CktFBQtfvBhcJVd9wvlwPsk+uyOy2HI7mNxKKgsBTt375teA2Tw\nUdHkhVNcsAKX1H7GNNLOEADksd86wuoXvg==\n-----END CERTIFICATE-----\n
                """
        let expectedFirstCert =
                """
                -----BEGIN CERTIFICATE-----\nMIIGNTCCBR2gAwIBAgISBKnOfqdiCLloeNKeDzAOov4lMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTAzMTUwNjQyMTJaFw0yMTA2MTMwNjQyMTJaMCExHzAdBgNVBAMT\nFnNydi1tYWlsLmJyaWdpbnZlc3QucnUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDk8MnLutFgkE6sObZZIyxBrq2T7F3aTykbysL59PkZRIpC3yJ+otq7\nzbAOAZ6081TpjFRc3zQu9AAEWssxDdgZKZxIYWxNe2Eg2uJtzctUmpH3eVyTLaYZ\nrEiFwVdTQeCcg+JPLAZ9nsdjAKsIccB44+s4GMAXxBJtQlsozUd/MaAvUfjrTsmR\nEK1bu2REraBvlMbSyNSeO8JlI0d1pHnmOkM70Pcvj5FUEIx17kJ3xfykHtVtZa/a\nZUXgSVLynTnuPVGpNjNVkfw+z89sbKAJd85e7U/kV86vwoOKaXnFrcYhM8r25tSg\nahmEI+v8A+7vNjjqgDNIKU8zbbMxzCrbAgMBAAGjggNUMIIDUDAOBgNVHQ8BAf8E\nBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFEFvpLzLkVQzxy4wemarIGSKhJCjMB8GA1UdIwQYMBaAFBQu\nsxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcwAYYV\naHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMuaS5s\nZW5jci5vcmcvMIIBIQYDVR0RBIIBGDCCARSCEmNoYXQuYnJpZ2ludmVzdC5ydYIN\nY2hhdC5pbm40Yi5ydYIRZ2l0LmJyaWdpbnZlc3QucnWCDGdpdC5pbm40Yi5ydYIM\naW5uNGIub25saW5lgghpbm40Yi5ydYISamlyYS5icmlnaW52ZXN0LnJ1ghFqaXJh\nLmlubjRiLm9ubGluZYINamlyYS5pbm40Yi5ydYIScm92MjEuaW5uNGIub25saW5l\ngg5yb3YyMS5pbm40Yi5ydYIWc3J2LW1haWwuYnJpZ2ludmVzdC5ydYIRc3J2LW1h\naWwuaW5uNGIucnWCEXRmcy5icmlnaW52ZXN0LnJ1ghB3d3cuaW5uNGIub25saW5l\nggx3d3cuaW5uNGIucnUwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMB\nAQEwKDAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEF\nBgorBgEEAdZ5AgQCBIH2BIHzAPEAdwD2XJQv0XcwIhRUGAgwlFaO400TGTO/3wwv\nIAvMTvFk4wAAAXg01dU/AAAEAwBIMEYCIQCXcU/71xjQtpKr5Xa/Nyndp/preAx7\nAyhoM4ZIdU2TygIhAKABQImwOLlJP3eyhEQxKSruDR/TuJEMGOkiDeZ4BP2FAHYA\nb1N2rDHwMRnYmQCkURX/dxUcEdkCwQApBo2yCJo32RMAAAF4NNXWBgAABAMARzBF\nAiEA6ZKg69wYtyS3dU9tTzANVJJLBo/ZVh1KJH43H/YgCSMCIBxIO22VilC8is38\nbGkx3YoBPUq8HZ9BnnOhsIrXGaW4MA0GCSqGSIb3DQEBCwUAA4IBAQBZYqAsANNa\nz4WVabxPG/KGG0T1CfOL4kdkM9Qgx9g3hw4J0qJPoQ60QVliKyUwHpcKmMF+AT20\nEsYl9Cu5DjA+PpjK0dMSYohuIs+nWVO7Flz876LDNDL2K15dHWYN0US9Bc+tsSZs\nD41e1deg8UYJQFnYtx7DQO1FDGaSu7iXGhuoTsLwBQrXs68aG7kJgfjJmfIiYzC5\nAll1leJQvG4IfqZPvEY3SZmhRuAaz17di0jLoEQnIC95HiEs05PZSsa9MTVBPVni\ntWQ7rrKUXKg0NcV9ZXp9t+Wn9XnBx+0I6tDOjtwuV/8Y9gR0q3s6lAa9oiLU5FZq\nncWUIW9udlDl\n-----END CERTIFICATE-----\n
                """
        
        let expectedSecondSert =
                """
                -----BEGIN CERTIFICATE-----\nMIIEZTCCA02gAwIBAgIQQAF1BIMUpMghjISpDBbN3zANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTIwMTAwNzE5MjE0MFoXDTIxMDkyOTE5MjE0MFow\nMjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxCzAJBgNVBAMT\nAlIzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuwIVKMz2oJTTDxLs\njVWSw/iC8ZmmekKIp10mqrUrucVMsa+Oa/l1yKPXD0eUFFU1V4yeqKI5GfWCPEKp\nTm71O8Mu243AsFzzWTjn7c9p8FoLG77AlCQlh/o3cbMT5xys4Zvv2+Q7RVJFlqnB\nU840yFLuta7tj95gcOKlVKu2bQ6XpUA0ayvTvGbrZjR8+muLj1cpmfgwF126cm/7\ngcWt0oZYPRfH5wm78Sv3htzB2nFd1EbjzK0lwYi8YGd1ZrPxGPeiXOZT/zqItkel\n/xMY6pgJdz+dU/nPAeX1pnAXFK9jpP+Zs5Od3FOnBv5IhR2haa4ldbsTzFID9e1R\noYvbFQIDAQABo4IBaDCCAWQwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8E\nBAMCAYYwSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5p\nZGVudHJ1c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTE\np7Gkeyxx+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEE\nAYLfEwEBATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2Vu\nY3J5cHQub3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0\nLmNvbS9EU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYf\nr52LFMLGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjANBgkqhkiG9w0B\nAQsFAAOCAQEA2UzgyfWEiDcx27sT4rP8i2tiEmxYt0l+PAK3qB8oYevO4C5z70kH\nejWEHx2taPDY/laBL21/WKZuNTYQHHPD5b1tXgHXbnL7KqC401dk5VvCadTQsvd8\nS8MXjohyc9z9/G2948kLjmE6Flh9dDYrVYA9x2O+hEPGOaEOa1eePynBgPayvUfL\nqjBstzLhWVQLGAkXXmNs+5ZnPBxzDJOLxhF2JIbeQAcH5H0tZrUlo5ZYyOqA7s9p\nO5b85o3AM/OJ+CktFBQtfvBhcJVd9wvlwPsk+uyOy2HI7mNxKKgsBTt375teA2Tw\nUdHkhVNcsAKX1H7GNNLOEADksd86wuoXvg==\n-----END CERTIFICATE-----\n
                """
        
        // when
        let result = csrfAgent.pemCertificates(from: certDataSample)
        
        // then
        XCTAssertEqual(result[0], expectedFirstCert)
        XCTAssertEqual(result[1], expectedSecondSert)
    }
    
    func testCertificateDataFromPemString() throws {
        
        // given
        let pemSample =
                """
                -----BEGIN CERTIFICATE-----\nMIIGNTCCBR2gAwIBAgISBKnOfqdiCLloeNKeDzAOov4lMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTAzMTUwNjQyMTJaFw0yMTA2MTMwNjQyMTJaMCExHzAdBgNVBAMT\nFnNydi1tYWlsLmJyaWdpbnZlc3QucnUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDk8MnLutFgkE6sObZZIyxBrq2T7F3aTykbysL59PkZRIpC3yJ+otq7\nzbAOAZ6081TpjFRc3zQu9AAEWssxDdgZKZxIYWxNe2Eg2uJtzctUmpH3eVyTLaYZ\nrEiFwVdTQeCcg+JPLAZ9nsdjAKsIccB44+s4GMAXxBJtQlsozUd/MaAvUfjrTsmR\nEK1bu2REraBvlMbSyNSeO8JlI0d1pHnmOkM70Pcvj5FUEIx17kJ3xfykHtVtZa/a\nZUXgSVLynTnuPVGpNjNVkfw+z89sbKAJd85e7U/kV86vwoOKaXnFrcYhM8r25tSg\nahmEI+v8A+7vNjjqgDNIKU8zbbMxzCrbAgMBAAGjggNUMIIDUDAOBgNVHQ8BAf8E\nBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFEFvpLzLkVQzxy4wemarIGSKhJCjMB8GA1UdIwQYMBaAFBQu\nsxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcwAYYV\naHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMuaS5s\nZW5jci5vcmcvMIIBIQYDVR0RBIIBGDCCARSCEmNoYXQuYnJpZ2ludmVzdC5ydYIN\nY2hhdC5pbm40Yi5ydYIRZ2l0LmJyaWdpbnZlc3QucnWCDGdpdC5pbm40Yi5ydYIM\naW5uNGIub25saW5lgghpbm40Yi5ydYISamlyYS5icmlnaW52ZXN0LnJ1ghFqaXJh\nLmlubjRiLm9ubGluZYINamlyYS5pbm40Yi5ydYIScm92MjEuaW5uNGIub25saW5l\ngg5yb3YyMS5pbm40Yi5ydYIWc3J2LW1haWwuYnJpZ2ludmVzdC5ydYIRc3J2LW1h\naWwuaW5uNGIucnWCEXRmcy5icmlnaW52ZXN0LnJ1ghB3d3cuaW5uNGIub25saW5l\nggx3d3cuaW5uNGIucnUwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMB\nAQEwKDAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEF\nBgorBgEEAdZ5AgQCBIH2BIHzAPEAdwD2XJQv0XcwIhRUGAgwlFaO400TGTO/3wwv\nIAvMTvFk4wAAAXg01dU/AAAEAwBIMEYCIQCXcU/71xjQtpKr5Xa/Nyndp/preAx7\nAyhoM4ZIdU2TygIhAKABQImwOLlJP3eyhEQxKSruDR/TuJEMGOkiDeZ4BP2FAHYA\nb1N2rDHwMRnYmQCkURX/dxUcEdkCwQApBo2yCJo32RMAAAF4NNXWBgAABAMARzBF\nAiEA6ZKg69wYtyS3dU9tTzANVJJLBo/ZVh1KJH43H/YgCSMCIBxIO22VilC8is38\nbGkx3YoBPUq8HZ9BnnOhsIrXGaW4MA0GCSqGSIb3DQEBCwUAA4IBAQBZYqAsANNa\nz4WVabxPG/KGG0T1CfOL4kdkM9Qgx9g3hw4J0qJPoQ60QVliKyUwHpcKmMF+AT20\nEsYl9Cu5DjA+PpjK0dMSYohuIs+nWVO7Flz876LDNDL2K15dHWYN0US9Bc+tsSZs\nD41e1deg8UYJQFnYtx7DQO1FDGaSu7iXGhuoTsLwBQrXs68aG7kJgfjJmfIiYzC5\nAll1leJQvG4IfqZPvEY3SZmhRuAaz17di0jLoEQnIC95HiEs05PZSsa9MTVBPVni\ntWQ7rrKUXKg0NcV9ZXp9t+Wn9XnBx+0I6tDOjtwuV/8Y9gR0q3s6lAa9oiLU5FZq\nncWUIW9udlDl\n-----END CERTIFICATE-----\n
                """
        
        // when
        let result = try csrfAgent.certificate(from: pemSample)
        let info = SecCertificateCopySubjectSummary(result) as String?
        
        // then
        XCTAssertNotNil(result)
        XCTAssertEqual(info, "srv-mail.briginvest.ru")
    }
    
    func testPemKeyFromSecKey() throws {
        
        let sampleCertString =
                """
                MIIGNTCCBR2gAwIBAgISBKnOfqdiCLloeNKeDzAOov4lMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTAzMTUwNjQyMTJaFw0yMTA2MTMwNjQyMTJaMCExHzAdBgNVBAMT\nFnNydi1tYWlsLmJyaWdpbnZlc3QucnUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDk8MnLutFgkE6sObZZIyxBrq2T7F3aTykbysL59PkZRIpC3yJ+otq7\nzbAOAZ6081TpjFRc3zQu9AAEWssxDdgZKZxIYWxNe2Eg2uJtzctUmpH3eVyTLaYZ\nrEiFwVdTQeCcg+JPLAZ9nsdjAKsIccB44+s4GMAXxBJtQlsozUd/MaAvUfjrTsmR\nEK1bu2REraBvlMbSyNSeO8JlI0d1pHnmOkM70Pcvj5FUEIx17kJ3xfykHtVtZa/a\nZUXgSVLynTnuPVGpNjNVkfw+z89sbKAJd85e7U/kV86vwoOKaXnFrcYhM8r25tSg\nahmEI+v8A+7vNjjqgDNIKU8zbbMxzCrbAgMBAAGjggNUMIIDUDAOBgNVHQ8BAf8E\nBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFEFvpLzLkVQzxy4wemarIGSKhJCjMB8GA1UdIwQYMBaAFBQu\nsxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcwAYYV\naHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMuaS5s\nZW5jci5vcmcvMIIBIQYDVR0RBIIBGDCCARSCEmNoYXQuYnJpZ2ludmVzdC5ydYIN\nY2hhdC5pbm40Yi5ydYIRZ2l0LmJyaWdpbnZlc3QucnWCDGdpdC5pbm40Yi5ydYIM\naW5uNGIub25saW5lgghpbm40Yi5ydYISamlyYS5icmlnaW52ZXN0LnJ1ghFqaXJh\nLmlubjRiLm9ubGluZYINamlyYS5pbm40Yi5ydYIScm92MjEuaW5uNGIub25saW5l\ngg5yb3YyMS5pbm40Yi5ydYIWc3J2LW1haWwuYnJpZ2ludmVzdC5ydYIRc3J2LW1h\naWwuaW5uNGIucnWCEXRmcy5icmlnaW52ZXN0LnJ1ghB3d3cuaW5uNGIub25saW5l\nggx3d3cuaW5uNGIucnUwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMB\nAQEwKDAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEF\nBgorBgEEAdZ5AgQCBIH2BIHzAPEAdwD2XJQv0XcwIhRUGAgwlFaO400TGTO/3wwv\nIAvMTvFk4wAAAXg01dU/AAAEAwBIMEYCIQCXcU/71xjQtpKr5Xa/Nyndp/preAx7\nAyhoM4ZIdU2TygIhAKABQImwOLlJP3eyhEQxKSruDR/TuJEMGOkiDeZ4BP2FAHYA\nb1N2rDHwMRnYmQCkURX/dxUcEdkCwQApBo2yCJo32RMAAAF4NNXWBgAABAMARzBF\nAiEA6ZKg69wYtyS3dU9tTzANVJJLBo/ZVh1KJH43H/YgCSMCIBxIO22VilC8is38\nbGkx3YoBPUq8HZ9BnnOhsIrXGaW4MA0GCSqGSIb3DQEBCwUAA4IBAQBZYqAsANNa\nz4WVabxPG/KGG0T1CfOL4kdkM9Qgx9g3hw4J0qJPoQ60QVliKyUwHpcKmMF+AT20\nEsYl9Cu5DjA+PpjK0dMSYohuIs+nWVO7Flz876LDNDL2K15dHWYN0US9Bc+tsSZs\nD41e1deg8UYJQFnYtx7DQO1FDGaSu7iXGhuoTsLwBQrXs68aG7kJgfjJmfIiYzC5\nAll1leJQvG4IfqZPvEY3SZmhRuAaz17di0jLoEQnIC95HiEs05PZSsa9MTVBPVni\ntWQ7rrKUXKg0NcV9ZXp9t+Wn9XnBx+0I6tDOjtwuV/8Y9gR0q3s6lAa9oiLU5FZq\nncWUIW9udlDl
                """
        
        let sampleCertData = Data(base64Encoded: sampleCertString, options: .ignoreUnknownCharacters)!
        let cert = SecCertificateCreateWithData(nil, sampleCertData as CFData)!
        let key = SecCertificateCopyKey(cert)!
        let keyData = SecKeyCopyExternalRepresentation(key, nil)! as Data
        
        // when
        let result = try csrfAgent.pemKey(from: key)
        
        // then
        XCTAssertEqual(result, "-----BEGIN PUBLIC KEY-----" + keyData.base64EncodedString() + "-----END PUBLIC KEY-----")
    }
}

